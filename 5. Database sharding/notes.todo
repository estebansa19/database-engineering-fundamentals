Qué es?:

  - segmentar la DB en particiones que están en multiples instancias de DB. Esto se hace de acuerdo
  a cierto criterio, por el cual van a estar segmentadas las DB. e.g. una DB en la que los ids de
  rows van desde 1-200k, otra DB en que van desde 200k-400k, etc.

Consistent Hashing:

  - es una técnica que se usa para saber, de manera consistente, a qué instancia de la DB debemos
    conectarnos cuando nuestra shard key no es algo tan intuitivo como un id, sino, por ejemplo un
    string.

Horizontal Partitioning vs Sharding:

  - HP divide una tabla muy grande en tablas más pequeñas en la misma DB.
  - Sharding divide una tabla muy grande en diferentes instancias de DB.

Pros of Sharding:

  - Scalability: data & memory.
  - Security: los usuarios pueden acceder sólo a algunos shards.
  - Es óptimo para el indexing porque los indexes van a ser más pequeños.

Cons of Sharding:

  - Le añade complejidad al cliente porque tiene que ser consciente del Sharding y a qué shard debe
    hacer la consulta.
  - Da problemas cuando son transacciones que deben ser entre varias DB.
  - Los rollbacks son más complicados al estar en diferentes instancias de DB.
  - Los cambios en el schema son complicados porque deben aplicarse en todos los shards.
  - JOINS entre DB?
  - Tenemos que saber cierto atributo de la consulta por el cual se va a realizar el consistent
    hashing.


Qué son?:

  - Son librerías que usan los software de DB para hacer guardado a muy bajo nivel en el disco
    duro (create, read, update, delete). Esto podría ser algo tan simple como una key-value
    store (como RocksDB) o tan complejo para implementar todas las ACID transactions.

  - DBMS usan el database engine y construyen features sobre este engine (replication, isolation,
    procedimientos almacenados, etc.)

  - Si queremos escribir una nueva DB podemos usar uno de los engine existentes y construir
    nuestros features sobre este engine.

  - Algunos DBMS nos dan la flexibilidad de hacer switch de engine (MySQL y MariaDB), otros vienen
    con un engine ya definido que no se puede cambiar (Postgres).

MyISAM (Index Sequential Access Method):

  - Los indexes que creamos apuntan directamente al row.
  - No tiene soporte transactional (ACID).
  - Open source y le pertenece a Oracle.
  - Los inserts son rápidos, los updates y deletes nos pueden traer problemas (fragments).
  - Los crashes de la DB corrompen tablas.
  - Table level locking (no row level locking).
  - MySQL, MariaD y Percona soportan MyISAM.

InnoDB:

  - B+tree - los indexes apuntan a la primary key en lugar de a la row directamente (el engine
    genera una primary key en caso de que no la creemos nosotros).
  - Replaces MyISAM.
  - El engine por defecto para MySQL y MariaDB.
  - Soporta ACID.
  - Row level locking.
  - Le pertenece a Oracle.

XtraDB:

  - Es un fork de InnoDB.
  - Fue el engine por defecto de MariaDB pero luego se cambió en la versión 10.2 a InnoDB de nuevo.
  - No se pudo mantener al día con los features de InnoDB.

SQLite:

  - La DB embebida más popular para data local.
  - B-tree.
  - Syntax muy parecida a la de Postgres.
  - Full ACID & table locking.
  - Concurrent read and writes.
  - Web SQL usa SQLit.
  - Es incluido en muchos SO por default.

Aria:

  - Muy parecido a MyISAM.
  - A diferencia de MyISAM, es seguro contra crashes.
  - No le pertenece a Oracle.

BerkeleyDB:

  - Desarrollada por Sleepycat en 1994 y perteneciente a Oracle.
  - key-value embedded DB.
  - ACID, transactions, replication, etc.
  - Estuvo en el core del Bitcoin.

LevelDB:

  - Escrito por devs de Google en 2011.
  - Log Structured Merge Tree (LSM, no B-trees por performance, querían una DB rápida en inserts).
  - No transactions.
  - Tiene este nombre porque internamente el flujo de información se va guardando en memoria:

    1. Memtable (memory).
    2. Level 0 (young level).
    3. Level 1-6.

  - Usado en el core de Blockchain, AutoCad, Minecraft, etc.
